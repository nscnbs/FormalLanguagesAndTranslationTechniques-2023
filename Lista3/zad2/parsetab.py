
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBleftMULDIVrightNEGrightPOWADD DIV EOL L_BRA MUL NUM POW R_BRA SUBline : expression EOLline : error EOLline : EOLexpression : NUMexpression : L_BRA expression R_BRAexpression : expression ADD expressionexpression : expression SUB expressionexpression : expression MUL expressionexpression : expression DIV expressionexpression : SUB expression %prec NEGexpression : expression POW exponentexponent : NUMexponent : L_BRA exponent R_BRAexponent : exponent ADD exponentexponent : exponent SUB exponentexponent : exponent MUL exponentexponent : exponent DIV exponentexponent : SUB exponent %prec NEG'
    
_lr_action_items = {'error':([0,],[4,]),'EOL':([0,2,4,5,16,17,18,19,20,21,22,25,31,32,33,34,35,36,],[3,8,14,-4,-10,-6,-7,-8,-9,-11,-12,-5,-18,-14,-15,-16,-17,-13,]),'NUM':([0,6,7,9,10,11,12,13,23,24,26,27,28,29,],[5,5,5,5,5,5,5,22,22,22,22,22,22,22,]),'L_BRA':([0,6,7,9,10,11,12,13,23,24,26,27,28,29,],[6,6,6,6,6,6,6,23,23,23,23,23,23,23,]),'SUB':([0,2,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,],[7,10,-4,7,7,7,7,7,7,24,10,-10,-6,-7,-8,-9,-11,-12,24,24,-5,24,24,24,24,27,-18,-14,-15,-16,-17,-13,]),'$end':([1,3,8,14,],[0,-3,-1,-2,]),'ADD':([2,5,15,16,17,18,19,20,21,22,25,30,31,32,33,34,35,36,],[9,-4,9,-10,-6,-7,-8,-9,-11,-12,-5,26,-18,-14,-15,-16,-17,-13,]),'MUL':([2,5,15,16,17,18,19,20,21,22,25,30,31,32,33,34,35,36,],[11,-4,11,-10,11,11,-8,-9,-11,-12,-5,28,-18,28,28,-16,-17,-13,]),'DIV':([2,5,15,16,17,18,19,20,21,22,25,30,31,32,33,34,35,36,],[12,-4,12,-10,12,12,-8,-9,-11,-12,-5,29,-18,29,29,-16,-17,-13,]),'POW':([2,5,15,16,17,18,19,20,21,22,25,31,32,33,34,35,36,],[13,-4,13,13,13,13,13,13,-11,-12,-5,-18,-14,-15,-16,-17,-13,]),'R_BRA':([5,15,16,17,18,19,20,21,22,25,30,31,32,33,34,35,36,],[-4,25,-10,-6,-7,-8,-9,-11,-12,-5,36,-18,-14,-15,-16,-17,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'line':([0,],[1,]),'expression':([0,6,7,9,10,11,12,],[2,15,16,17,18,19,20,]),'exponent':([13,23,24,26,27,28,29,],[21,30,31,32,33,34,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> line","S'",1,None,None,None),
  ('line -> expression EOL','line',2,'p_line_expression','c_parser.py',21),
  ('line -> error EOL','line',2,'p_line_error','c_parser.py',34),
  ('line -> EOL','line',1,'p_line_eol','c_parser.py',43),
  ('expression -> NUM','expression',1,'p_expression_num','c_parser.py',47),
  ('expression -> L_BRA expression R_BRA','expression',3,'p_expression_parent','c_parser.py',54),
  ('expression -> expression ADD expression','expression',3,'p_expression_add','c_parser.py',58),
  ('expression -> expression SUB expression','expression',3,'p_expression_sub','c_parser.py',64),
  ('expression -> expression MUL expression','expression',3,'p_expression_mul','c_parser.py',70),
  ('expression -> expression DIV expression','expression',3,'p_expression_div','c_parser.py',76),
  ('expression -> SUB expression','expression',2,'p_expression_neg','c_parser.py',87),
  ('expression -> expression POW exponent','expression',3,'p_expression_pow','c_parser.py',94),
  ('exponent -> NUM','exponent',1,'p_exponent_num','c_parser.py',100),
  ('exponent -> L_BRA exponent R_BRA','exponent',3,'p_exponent_parent','c_parser.py',107),
  ('exponent -> exponent ADD exponent','exponent',3,'p_exponent_add','c_parser.py',111),
  ('exponent -> exponent SUB exponent','exponent',3,'p_exponent_sub','c_parser.py',117),
  ('exponent -> exponent MUL exponent','exponent',3,'p_exponent_mul','c_parser.py',123),
  ('exponent -> exponent DIV exponent','exponent',3,'p_exponent_div','c_parser.py',129),
  ('exponent -> SUB exponent','exponent',2,'p_exponent_neg','c_parser.py',140),
]
